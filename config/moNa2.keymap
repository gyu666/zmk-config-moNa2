#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt Q ESC         &kp W             &kp E         &kp R             &kp T                                   &kp Y       &kp U  &kp I      &kp O      &kp BACKSPACE
&kp A             &kp S             &kp D         &kp F             &kp G                    &kp MINUS      &kp H       &kp J  &kp K      &kp L      &mt COLON P
&mt LEFT_SHIFT Z  &kp X             &kp C         &kp V             &kp B       &lt 4 TAB    &kp SEMICOLON  &kp N       &kp M  &mkp LCLK  &mkp RCLK  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &mt LEFT_ALT TAB  &kp LEFT_GUI  &lt 2 INT_HENKAN  &lt 1 INT4  &kp SPACE    &lt 4 ENTER    &lt 3 INT5                               &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&kp LC(Q)          &kp LC(W)  &kp F7     &kp F8               &kp F9                           &kp PLUS   &kp N7  &kp N8  &kp N9  &kp ASTERISK
&mt LC(A) LA(TAB)  &kp LC(S)  &kp LC(D)  &kp LC(F)            &kp LC(G)            &kp COMMA   &kp MINUS  &kp N4  &kp N5  &kp N6  &kp SLASH
&kp LC(Z)          &kp LC(X)  &kp LC(C)  &mt LS(LC(V)) LG(V)  &trans     &trans    &kp PERIOD  &kp N0     &kp N1  &kp N2  &kp N3  &kp EQUAL
&trans             &trans     &trans     &trans               &trans     &trans    &trans      &trans                             &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp F1                      &kp F2           &kp F3           &kp F4           &kp F5                                     &kp CARET             &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans                      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK               &kp UNDERSCORE  &kp NON_US_BACKSLASH  &kp AMPERSAND     &kp HASH           &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL    &kp QUESTION    &kp EXCLAMATION       &kp AT            &kp LESS_THAN      &kp GREATER_THAN      &kp TILDE
&trans                      &trans           &trans           &trans           &trans        &trans       &trans          &trans                                                                           &kp PIPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &trans  &kp LC(TAB)              &trans                    &kp HOME            &trans               &kp UP_ARROW    &mt N2 N4        &mt N0 N5
&kp TAB         &trans                  &trans  &trans                   &trans            &trans  &kp END             &kp LEFT_ARROW       &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp DEL
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans  &kp LG(LS(RIGHT_ARROW))  &trans  &trans    &trans  &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &trans          &trans           &kp PAGE_UP
&trans          &trans                  &trans  &trans                   &trans  &trans    &trans  &trans                                                                    &kp PAGE_DOWN
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&kp C_POWER  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans       &trans  &trans  &trans  &trans            &trans       &trans        &trans        &trans        &trans        &trans
&trans       &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans       &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
